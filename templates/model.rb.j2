{% set backup = item.value -%}

TemplateModel.new(:{{ item.key }}, "{{ microservice_name }} {{ microservice_env }}") do
{% if backup_store.SFTP is defined %}
  store_with SFTP do |server|
    server.keep       = "{{ backup.keep }}"
  end
{% endif %}

{% if backup_store.S3 is defined %}
  store_with S3 do |s3|
    s3.keep       = "{{ backup.keep }}"
  end
{% endif %}

{% if backup.local.path is defined %}
  store_with Local do |local|
    local.path = '{{ backup.local.path }}'
    local.keep = "{{ backup.keep }}"
  end
{% endif %}

{% if backup.archives is defined %}
  archive :archive do |archive|
{% for archive in backup.archives.add %}
    archive.add '{{ archive }}'
{% endfor %}
{% if backup.archives.exclude is defined %}
{% for archive in backup.archives.exclude %}
    archive.exclude '{{ archive }}'
{% endfor %}
{% endif %}
  end
{% endif %}

{% if backup.postgresql is defined %}
{% for database in backup.postgresql %}
  database PostgreSQL, :{{ database }} do |db|
    db.name               = "{{ database }}"
  end

{% endfor %}
  # backup users/roles/etc
  database PostgreSQL, :all do |db|
    db.name               = :all
    db.additional_options = ["--globals-only"]
  end
{% endif %}

{% if backup.mongodb is defined %}
{% for database in backup.mongodb %}
{% if database == ":all" %}
  database MongoDB, {{ database }} do |db|
  end
{% else %}
  database MongoDB, :{{ database }} do |db|
    db.name               = "{{ database }}"
  end
{% endif %}
{% endfor %}
{% endif %}

{% if backup.mysql is defined %}
{% for database in backup.mysql %}
  database MySQL, :{{ database.label }} do |db|
    db.name               = "{{ database.name }}"
  end
{% endfor %}
{% endif %}

end
